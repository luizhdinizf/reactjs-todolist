{"version":3,"sources":["pages/TasksList/index.js","routes.js","App.js","ServiceWorker.js","index.js"],"names":["TasksList","useState","filteredTasks","setTasks","loadedTasks","useHistory","JSON","parse","localStorage","getItem","a","newTask","id","parseInt","length","title","description","priority","visibility","newTasks","push","console","log","filter","task","setItem","stringify","idBuscado","map","window","prompt","newTitle","newDescription","newPriority","useEffect","className","key","type","onClick","handleEditTitle","size","handleEditPriority","handleHideShowId","display","handleDeleteTask","handleEditDescription","handleAddTask","Routes","path","exact","component","App","Boolean","location","hostname","match","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.c7b89eaf.chunk.js","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { Link, useHistory } from \"react-router-dom\";\r\nimport { FiPower, FiPlusCircle } from \"react-icons/fi\";\r\nimport {\r\n  FaArrowDown,\r\n  FaPencilAlt,\r\n  FaCheckCircle,\r\n  FaTrashAlt,\r\n  FaArrowCircleUp,\r\n  FaArrowUp\r\n} from \"react-icons/fa\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\nimport \"./styles.css\";\r\n\r\nexport default function TasksList() {\r\n  const [filteredTasks, setTasks] = useState([]);\r\n  const history = useHistory();\r\n  const userName = \"Luiz\";\r\n  var loadedTasks = JSON.parse(localStorage.getItem(userName));\r\n\r\n  useEffect(() => {\r\n    loadedTasks = JSON.parse(localStorage.getItem(userName));\r\n    setTasks(\r\n      loadedTasks !== null\r\n        ? loadedTasks\r\n        : [\r\n            {\r\n              id: 0,\r\n              title: 0,\r\n              description: 0,\r\n              priority: 0,\r\n              visibility: true\r\n            }\r\n          ]\r\n    );\r\n  }, [userName]);\r\n\r\n  async function handleAddTask() {\r\n    const newTask = {\r\n      id: parseInt(filteredTasks[filteredTasks.length - 1].id) + 1,\r\n      title: filteredTasks[filteredTasks.length - 1].id + 1,\r\n      description: filteredTasks[filteredTasks.length - 1].id + 1,\r\n      priority: 0,\r\n      visibility: true\r\n    };\r\n    const newTasks = filteredTasks;\r\n    newTasks.push(newTask);\r\n    console.log(newTasks);\r\n    setTasks(filteredTasks.filter(task => task.id !== 8789792));\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n  async function handleHideShowId(idBuscado) {\r\n    setTasks(\r\n      filteredTasks.map(task => ({\r\n        id: task.id,\r\n        title: task.title,\r\n        description: task.description,\r\n        priority: task.priority,\r\n        visibility: task.id === idBuscado ? !task.visibility : task.visibility\r\n      }))\r\n    );\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n  async function handleEditTitle(idBuscado) {\r\n    const newTitle = await window.prompt(\r\n      \"Editar Titulo\",\r\n      filteredTasks.filter(task => task.id === idBuscado)[0].title\r\n    );\r\n    await setTasks(\r\n      filteredTasks.map(task => ({\r\n        id: task.id,\r\n        title:\r\n          task.id === idBuscado && newTitle !== null ? newTitle : task.title,\r\n        description: task.description,\r\n        priority: task.priority,\r\n        visibility: task.visibility\r\n      }))\r\n    );\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n  async function handleEditDescription(idBuscado) {\r\n    const newDescription = await window.prompt(\r\n      \"Editar Descrição\",\r\n      filteredTasks.filter(task => task.id === idBuscado)[0].description\r\n    );\r\n    await setTasks(\r\n      filteredTasks.map(task => ({\r\n        id: task.id,\r\n        title: task.title,\r\n        description:\r\n          task.id === idBuscado && newDescription !== null\r\n            ? newDescription\r\n            : task.description,\r\n        priority: task.priority,\r\n        visibility: task.visibility\r\n      }))\r\n    );\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n  async function handleEditPriority(idBuscado) {\r\n    const newPriority = await window.prompt(\r\n      \"Editar Prioridade\",\r\n      filteredTasks.filter(task => task.id === idBuscado)[0].priority\r\n    );\r\n    await setTasks(\r\n      filteredTasks.map(task => ({\r\n        id: task.id,\r\n        title: task.title,\r\n        priority:\r\n          task.id === idBuscado && newPriority !== null\r\n            ? newPriority\r\n            : task.priority,\r\n        description: task.description,\r\n        visibility: task.visibility\r\n      }))\r\n    );\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n  async function handleDeleteTask(id) {\r\n    console.log(filteredTasks);\r\n    setTasks(filteredTasks.filter(task => task.id !== id));\r\n    localStorage.setItem(userName, JSON.stringify(filteredTasks));\r\n  }\r\n\r\n  return (\r\n    <div className=\"task-cards-container\">\r\n      <header>\r\n        <span>Bem vindo, {userName}</span>\r\n      </header>\r\n\r\n      <ul>\r\n        {filteredTasks.map(task => (\r\n          <li key={task.id}>\r\n            <header className={task.visibility ? \"hidden\" : \"show\"}>\r\n              <strong className=\"card-title\">\r\n                {task.title}\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"edit-button\"\r\n                  onClick={() => handleEditTitle(task.id)}\r\n                >\r\n                  <FaPencilAlt size=\"12\" />\r\n                </button>\r\n              </strong>\r\n              <button\r\n                className=\"card-priority\"\r\n                onClick={() => handleEditPriority(task.id)}\r\n              >\r\n                {task.priority}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"hideShow-button\"\r\n                onClick={() => handleHideShowId(task.id)}\r\n              >\r\n                <FaArrowDown size=\"12\" display={task.visibility ? \"none\" : \"block\"}/>\r\n                <FaArrowUp size=\"12\" display={task.visibility ? \"block\" : \"none\"}/>\r\n              </button>\r\n            </header>\r\n\r\n            <p className={task.visibility ? \"visible\" : \"not-visible\"}>\r\n              <footer>\r\n                <button type=\"button\" className=\"card-check\">\r\n                  <FaCheckCircle size={15} />\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"card-remove\"\r\n                  onClick={() => handleDeleteTask(task.id)}\r\n                >\r\n                  <FaTrashAlt size={15} />\r\n                </button>\r\n              </footer>\r\n              {task.visibility}\r\n              {task.description}\r\n              <button\r\n                type=\"button\"\r\n                className=\"edit-button\"\r\n                onClick={() => handleEditDescription(task.id)}\r\n              >\r\n                <FaPencilAlt size=\"12\" />\r\n              </button>\r\n\r\n            </p>\r\n          </li>\r\n        ))}\r\n\r\n        <li>\r\n          <button\r\n            type=\"button\"\r\n            className=\"add-button\"\r\n            onClick={() => handleAddTask()}\r\n          >\r\n            <FiPlusCircle size={15} />\r\n            Novo\r\n          </button>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport {BrowserRouter, Route, Switch} from 'react-router-dom';\r\n\r\nimport TasksList from './pages/TasksList';\r\n\r\n\r\nexport default function Routes(){\r\n    console.log(\"routes\");\r\n    return(        \r\n        <BrowserRouter>\r\n            <Switch>\r\n                <Route path=\"/\" exact component={TasksList}/>\r\n                <Route path=\"\" exact component={TasksList}/>\r\n                <Route path=\"/tasks\" exact component={TasksList}/>\r\n\r\n            </Switch>\r\n        </BrowserRouter>\r\n    )\r\n}","import React from 'react';\nimport './global.css';\nimport Routes from './routes'\n\nfunction App() {\n  console.log(\"aa\");\n  return (\n    \n  <Routes/>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport { unregister } from './ServiceWorker';\n\nunregister();\nconsole.log(\"rte\");\n\nReactDOM.render(<App />,document.getElementById('root'));\n"],"sourceRoot":""}